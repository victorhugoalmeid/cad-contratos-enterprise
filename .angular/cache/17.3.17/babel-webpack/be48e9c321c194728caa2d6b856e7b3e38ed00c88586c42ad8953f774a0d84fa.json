{"ast":null,"code":"import { ElementRef, inject } from '@angular/core';\nimport { NgControl } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nexport let PercentagemDirective = /*#__PURE__*/(() => {\n  class PercentagemDirective {\n    constructor() {\n      this.el = inject(ElementRef);\n      this.ngControl = inject(NgControl);\n    }\n    onInput() {\n      const input = this.el.nativeElement;\n      const raw = (input.value || '').replace(/[^0-9]/g, '');\n      const num = Math.min(10000, Number(raw));\n      const value = (num / 100).toFixed(2);\n      input.value = value.replace('.', ',') + '%';\n      this.ngControl.control?.setValue(parseFloat(value), {\n        emitEvent: true,\n        emitModelToViewChange: false\n      });\n    }\n    onBlur() {\n      const input = this.el.nativeElement;\n      if (!input.value) this.ngControl.control?.setValue(null);\n    }\n    static {\n      this.ɵfac = function PercentagemDirective_Factory(t) {\n        return new (t || PercentagemDirective)();\n      };\n    }\n    static {\n      this.ɵdir = /*@__PURE__*/i0.ɵɵdefineDirective({\n        type: PercentagemDirective,\n        selectors: [[\"\", \"appPercentagem\", \"\"]],\n        hostBindings: function PercentagemDirective_HostBindings(rf, ctx) {\n          if (rf & 1) {\n            i0.ɵɵlistener(\"input\", function PercentagemDirective_input_HostBindingHandler($event) {\n              return ctx.onInput($event);\n            })(\"blur\", function PercentagemDirective_blur_HostBindingHandler() {\n              return ctx.onBlur();\n            });\n          }\n        },\n        standalone: true\n      });\n    }\n  }\n  return PercentagemDirective;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}