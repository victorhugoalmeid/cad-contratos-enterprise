{"ast":null,"code":"export function existeElementoNoArray() {\n  return control => {\n    const arr = control;\n    return arr && arr.length > 0 ? null : {\n      requiredArray: true\n    };\n  };\n}\nexport function cpfCnpjValidator() {\n  const onlyDigits = v => (v || '').replace(/\\D/g, '');\n  return control => {\n    const v = onlyDigits(control.value || '');\n    if (!v) return null;\n    if (v.length === 11) return /^[0-9]{11}$/.test(v) ? null : {\n      cpfInvalido: true\n    };\n    if (v.length === 14) return /^[0-9]{14}$/.test(v) ? null : {\n      cnpjInvalido: true\n    };\n    return {\n      cpfCnpjTamanhoInvalido: true\n    };\n  };\n}\n/** Aceita 'YYYYMMDD', 'YYYY-MM-DD', 'DD/MM/YYYY' e retorna 'YYYY-MM-DD'. */\nexport function normalizarData(input) {\n  if (!input) return null;\n  const v = ('' + input).trim();\n  if (!v) return null;\n  const yyyy_mm_dd = /^\\d{4}-\\d{2}-\\d{2}$/;\n  const yyyymmdd = /^(\\d{4})(\\d{2})(\\d{2})$/;\n  const ddmmyyyy = /^(\\d{2})\\/(\\d{2})\\/(\\d{4})$/;\n  const pad = n => n < 10 ? '0' + n : '' + n;\n  const valid = (y, m, d) => {\n    const dt = new Date(Date.UTC(y, m - 1, d));\n    return dt.getUTCFullYear() === y && dt.getUTCMonth() === m - 1 && dt.getUTCDate() === d;\n  };\n  if (yyyy_mm_dd.test(v)) {\n    const [y, m, d] = v.split('-').map(Number);\n    return valid(y, m, d) ? v : null;\n  }\n  const m1 = yyyymmdd.exec(v);\n  if (m1) {\n    const y = parseInt(m1[1], 10);\n    const mo = parseInt(m1[2], 10);\n    const d = parseInt(m1[3], 10);\n    return valid(y, mo, d) ? `${y}-${pad(mo)}-${pad(d)}` : null;\n  }\n  const m2 = ddmmyyyy.exec(v);\n  if (m2) {\n    const d = parseInt(m2[1], 10);\n    const mo = parseInt(m2[2], 10);\n    const y = parseInt(m2[3], 10);\n    return valid(y, mo, d) ? `${y}-${pad(mo)}-${pad(d)}` : null;\n  }\n  return null;\n}\nexport function dataValidaValidator() {\n  return control => {\n    const v = (control.value ?? '').toString().trim();\n    if (!v) return null;\n    const iso = normalizarData(v);\n    return iso ? null : {\n      dataInvalida: true\n    };\n  };\n}","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}